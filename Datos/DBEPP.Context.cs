//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Entidad;

    public partial class DB_PPPEntities1 : DbContext
    {
        public DB_PPPEntities1()
            : base("name=DB_PPPEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CartaDePresentacion> CartaDePresentacion { get; set; }
        public virtual DbSet<CoordinadorEPP> CoordinadorEPP { get; set; }
        public virtual DbSet<DirectorEPIS> DirectorEPIS { get; set; }
        public virtual DbSet<DocenteSupervisorEPP> DocenteSupervisorEPP { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<Estudiante> Estudiante { get; set; }
        public virtual DbSet<Informe> Informe { get; set; }
        public virtual DbSet<InformeAvanceEPP> InformeAvanceEPP { get; set; }
        public virtual DbSet<InformeDeSupervisionEPP> InformeDeSupervisionEPP { get; set; }
        public virtual DbSet<InformeFinalEPP> InformeFinalEPP { get; set; }
        public virtual DbSet<PlanDeTrabajoEPP> PlanDeTrabajoEPP { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual ObjectResult<spActualizarCartaDePresentacion_Result> spActualizarCartaDePresentacion(Nullable<int> codCartaPresentacion, byte[] archivo, Nullable<int> codInforme)
        {
            var codCartaPresentacionParameter = codCartaPresentacion.HasValue ?
                new ObjectParameter("CodCartaPresentacion", codCartaPresentacion) :
                new ObjectParameter("CodCartaPresentacion", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarCartaDePresentacion_Result>("spActualizarCartaDePresentacion", codCartaPresentacionParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spActualizarCoordinadorEPP_Result> spActualizarCoordinadorEPP(Nullable<int> codCoordinador, string apellidos, string nombres, string correo, string telefono, Nullable<int> codUsuario)
        {
            var codCoordinadorParameter = codCoordinador.HasValue ?
                new ObjectParameter("CodCoordinador", codCoordinador) :
                new ObjectParameter("CodCoordinador", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarCoordinadorEPP_Result>("spActualizarCoordinadorEPP", codCoordinadorParameter, apellidosParameter, nombresParameter, correoParameter, telefonoParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spActualizarDirectorEPIS_Result> spActualizarDirectorEPIS(Nullable<int> codDirectorEPIS, string apellidos, string nombres, string correo, string telefono, Nullable<int> codUsuario)
        {
            var codDirectorEPISParameter = codDirectorEPIS.HasValue ?
                new ObjectParameter("CodDirectorEPIS", codDirectorEPIS) :
                new ObjectParameter("CodDirectorEPIS", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarDirectorEPIS_Result>("spActualizarDirectorEPIS", codDirectorEPISParameter, apellidosParameter, nombresParameter, correoParameter, telefonoParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spActualizarDocenteSupervisorEPP_Result> spActualizarDocenteSupervisorEPP(Nullable<int> codDocenteSupervisor, string apellidos, string nombres, string correo, string telefono, Nullable<int> codUsuario)
        {
            var codDocenteSupervisorParameter = codDocenteSupervisor.HasValue ?
                new ObjectParameter("CodDocenteSupervisor", codDocenteSupervisor) :
                new ObjectParameter("CodDocenteSupervisor", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarDocenteSupervisorEPP_Result>("spActualizarDocenteSupervisorEPP", codDocenteSupervisorParameter, apellidosParameter, nombresParameter, correoParameter, telefonoParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spActualizarEmpresa_Result> spActualizarEmpresa(Nullable<int> codEmpresa, string nombre, string descripcion, string perfil, string requisitosGenerales, string cronogramaConvocatoria, string beneficios, Nullable<System.DateTime> fechaLimitePostulacion, Nullable<int> codCoordinador)
        {
            var codEmpresaParameter = codEmpresa.HasValue ?
                new ObjectParameter("CodEmpresa", codEmpresa) :
                new ObjectParameter("CodEmpresa", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("Perfil", perfil) :
                new ObjectParameter("Perfil", typeof(string));
    
            var requisitosGeneralesParameter = requisitosGenerales != null ?
                new ObjectParameter("RequisitosGenerales", requisitosGenerales) :
                new ObjectParameter("RequisitosGenerales", typeof(string));
    
            var cronogramaConvocatoriaParameter = cronogramaConvocatoria != null ?
                new ObjectParameter("CronogramaConvocatoria", cronogramaConvocatoria) :
                new ObjectParameter("CronogramaConvocatoria", typeof(string));
    
            var beneficiosParameter = beneficios != null ?
                new ObjectParameter("Beneficios", beneficios) :
                new ObjectParameter("Beneficios", typeof(string));
    
            var fechaLimitePostulacionParameter = fechaLimitePostulacion.HasValue ?
                new ObjectParameter("fechaLimitePostulacion", fechaLimitePostulacion) :
                new ObjectParameter("fechaLimitePostulacion", typeof(System.DateTime));
    
            var codCoordinadorParameter = codCoordinador.HasValue ?
                new ObjectParameter("CodCoordinador", codCoordinador) :
                new ObjectParameter("CodCoordinador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarEmpresa_Result>("spActualizarEmpresa", codEmpresaParameter, nombreParameter, descripcionParameter, perfilParameter, requisitosGeneralesParameter, cronogramaConvocatoriaParameter, beneficiosParameter, fechaLimitePostulacionParameter, codCoordinadorParameter);
        }
    
        public virtual ObjectResult<spActualizarEstudiante_Result> spActualizarEstudiante(Nullable<int> codEstudiante, string apellidos, string nombres, string correo, string telefono, Nullable<int> codDocenteSupervisor, Nullable<int> codUsuario)
        {
            var codEstudianteParameter = codEstudiante.HasValue ?
                new ObjectParameter("CodEstudiante", codEstudiante) :
                new ObjectParameter("CodEstudiante", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var codDocenteSupervisorParameter = codDocenteSupervisor.HasValue ?
                new ObjectParameter("CodDocenteSupervisor", codDocenteSupervisor) :
                new ObjectParameter("CodDocenteSupervisor", typeof(int));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarEstudiante_Result>("spActualizarEstudiante", codEstudianteParameter, apellidosParameter, nombresParameter, correoParameter, telefonoParameter, codDocenteSupervisorParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spActualizarInforme_Result> spActualizarInforme(Nullable<int> codInforme, string tipoInforme, byte[] archivo, Nullable<System.DateTime> fechaDeSubida, Nullable<bool> estado, string observaciones, Nullable<int> codUsuario)
        {
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            var tipoInformeParameter = tipoInforme != null ?
                new ObjectParameter("TipoInforme", tipoInforme) :
                new ObjectParameter("TipoInforme", typeof(string));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var fechaDeSubidaParameter = fechaDeSubida.HasValue ?
                new ObjectParameter("FechaDeSubida", fechaDeSubida) :
                new ObjectParameter("FechaDeSubida", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarInforme_Result>("spActualizarInforme", codInformeParameter, tipoInformeParameter, archivoParameter, fechaDeSubidaParameter, estadoParameter, observacionesParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spActualizarInformeAvanceEPP_Result> spActualizarInformeAvanceEPP(Nullable<int> codInformeAvanceEPP, byte[] archivo, Nullable<int> codInforme)
        {
            var codInformeAvanceEPPParameter = codInformeAvanceEPP.HasValue ?
                new ObjectParameter("CodInformeAvanceEPP", codInformeAvanceEPP) :
                new ObjectParameter("CodInformeAvanceEPP", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarInformeAvanceEPP_Result>("spActualizarInformeAvanceEPP", codInformeAvanceEPPParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spActualizarInformeDeSupervisionEPP_Result> spActualizarInformeDeSupervisionEPP(Nullable<int> codInformeDeSupervisionEPP, string calificacion, string supervisorACargoEmpresa, byte[] archivo, Nullable<int> codInforme)
        {
            var codInformeDeSupervisionEPPParameter = codInformeDeSupervisionEPP.HasValue ?
                new ObjectParameter("CodInformeDeSupervisionEPP", codInformeDeSupervisionEPP) :
                new ObjectParameter("CodInformeDeSupervisionEPP", typeof(int));
    
            var calificacionParameter = calificacion != null ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(string));
    
            var supervisorACargoEmpresaParameter = supervisorACargoEmpresa != null ?
                new ObjectParameter("SupervisorACargoEmpresa", supervisorACargoEmpresa) :
                new ObjectParameter("SupervisorACargoEmpresa", typeof(string));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarInformeDeSupervisionEPP_Result>("spActualizarInformeDeSupervisionEPP", codInformeDeSupervisionEPPParameter, calificacionParameter, supervisorACargoEmpresaParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spActualizarInformeFinalEPP_Result> spActualizarInformeFinalEPP(Nullable<int> codInformeFinalEPP, byte[] archivo, Nullable<int> codInforme)
        {
            var codInformeFinalEPPParameter = codInformeFinalEPP.HasValue ?
                new ObjectParameter("CodInformeFinalEPP", codInformeFinalEPP) :
                new ObjectParameter("CodInformeFinalEPP", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarInformeFinalEPP_Result>("spActualizarInformeFinalEPP", codInformeFinalEPPParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spActualizarPlanDeTrabajoEPP_Result> spActualizarPlanDeTrabajoEPP(Nullable<int> codPlanDeTrabajoEPP, byte[] archivo, Nullable<int> codInforme)
        {
            var codPlanDeTrabajoEPPParameter = codPlanDeTrabajoEPP.HasValue ?
                new ObjectParameter("CodPlanDeTrabajoEPP", codPlanDeTrabajoEPP) :
                new ObjectParameter("CodPlanDeTrabajoEPP", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarPlanDeTrabajoEPP_Result>("spActualizarPlanDeTrabajoEPP", codPlanDeTrabajoEPPParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spActualizarUsuario_Result> spActualizarUsuario(Nullable<int> codUsuario, string usuario, Nullable<int> clave)
        {
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave.HasValue ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spActualizarUsuario_Result>("spActualizarUsuario", codUsuarioParameter, usuarioParameter, claveParameter);
        }
    
        public virtual ObjectResult<spAgregarCartaDePresentacion_Result> spAgregarCartaDePresentacion(Nullable<int> codCartaPresentacion, byte[] archivo, Nullable<int> codInforme)
        {
            var codCartaPresentacionParameter = codCartaPresentacion.HasValue ?
                new ObjectParameter("CodCartaPresentacion", codCartaPresentacion) :
                new ObjectParameter("CodCartaPresentacion", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarCartaDePresentacion_Result>("spAgregarCartaDePresentacion", codCartaPresentacionParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spAgregarCoordinadorEPP_Result> spAgregarCoordinadorEPP(Nullable<int> codCoordinador, string apellidos, string nombres, string correo, string telefono, Nullable<int> codUsuario)
        {
            var codCoordinadorParameter = codCoordinador.HasValue ?
                new ObjectParameter("CodCoordinador", codCoordinador) :
                new ObjectParameter("CodCoordinador", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarCoordinadorEPP_Result>("spAgregarCoordinadorEPP", codCoordinadorParameter, apellidosParameter, nombresParameter, correoParameter, telefonoParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spAgregarDirectorEPIS_Result> spAgregarDirectorEPIS(Nullable<int> codDirectorEPIS, string apellidos, string nombres, string correo, string telefono, Nullable<int> codUsuario)
        {
            var codDirectorEPISParameter = codDirectorEPIS.HasValue ?
                new ObjectParameter("CodDirectorEPIS", codDirectorEPIS) :
                new ObjectParameter("CodDirectorEPIS", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarDirectorEPIS_Result>("spAgregarDirectorEPIS", codDirectorEPISParameter, apellidosParameter, nombresParameter, correoParameter, telefonoParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spAgregarDocenteSupervisorEPP_Result> spAgregarDocenteSupervisorEPP(Nullable<int> codDocenteSupervisor, string apellidos, string nombres, string correo, string telefono, Nullable<int> codUsuario)
        {
            var codDocenteSupervisorParameter = codDocenteSupervisor.HasValue ?
                new ObjectParameter("CodDocenteSupervisor", codDocenteSupervisor) :
                new ObjectParameter("CodDocenteSupervisor", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarDocenteSupervisorEPP_Result>("spAgregarDocenteSupervisorEPP", codDocenteSupervisorParameter, apellidosParameter, nombresParameter, correoParameter, telefonoParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spAgregarEmpresa_Result> spAgregarEmpresa(Nullable<int> codEmpresa, string nombre, string descripcion, string perfil, string requisitosGenerales, string cronogramaConvocatoria, string beneficios, Nullable<System.DateTime> fechaLimitePostulacion, Nullable<int> codCoordinador)
        {
            var codEmpresaParameter = codEmpresa.HasValue ?
                new ObjectParameter("CodEmpresa", codEmpresa) :
                new ObjectParameter("CodEmpresa", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("Perfil", perfil) :
                new ObjectParameter("Perfil", typeof(string));
    
            var requisitosGeneralesParameter = requisitosGenerales != null ?
                new ObjectParameter("RequisitosGenerales", requisitosGenerales) :
                new ObjectParameter("RequisitosGenerales", typeof(string));
    
            var cronogramaConvocatoriaParameter = cronogramaConvocatoria != null ?
                new ObjectParameter("CronogramaConvocatoria", cronogramaConvocatoria) :
                new ObjectParameter("CronogramaConvocatoria", typeof(string));
    
            var beneficiosParameter = beneficios != null ?
                new ObjectParameter("Beneficios", beneficios) :
                new ObjectParameter("Beneficios", typeof(string));
    
            var fechaLimitePostulacionParameter = fechaLimitePostulacion.HasValue ?
                new ObjectParameter("fechaLimitePostulacion", fechaLimitePostulacion) :
                new ObjectParameter("fechaLimitePostulacion", typeof(System.DateTime));
    
            var codCoordinadorParameter = codCoordinador.HasValue ?
                new ObjectParameter("CodCoordinador", codCoordinador) :
                new ObjectParameter("CodCoordinador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarEmpresa_Result>("spAgregarEmpresa", codEmpresaParameter, nombreParameter, descripcionParameter, perfilParameter, requisitosGeneralesParameter, cronogramaConvocatoriaParameter, beneficiosParameter, fechaLimitePostulacionParameter, codCoordinadorParameter);
        }
    
        public virtual ObjectResult<spAgregarEstudiante_Result> spAgregarEstudiante(Nullable<int> codEstudiante, string apellidos, string nombres, string correo, string telefono, Nullable<int> codDocenteSupervisor, Nullable<int> codUsuario)
        {
            var codEstudianteParameter = codEstudiante.HasValue ?
                new ObjectParameter("CodEstudiante", codEstudiante) :
                new ObjectParameter("CodEstudiante", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var codDocenteSupervisorParameter = codDocenteSupervisor.HasValue ?
                new ObjectParameter("CodDocenteSupervisor", codDocenteSupervisor) :
                new ObjectParameter("CodDocenteSupervisor", typeof(int));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarEstudiante_Result>("spAgregarEstudiante", codEstudianteParameter, apellidosParameter, nombresParameter, correoParameter, telefonoParameter, codDocenteSupervisorParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spAgregarInforme_Result> spAgregarInforme(Nullable<int> codInforme, string tipoInforme, byte[] archivo, Nullable<System.DateTime> fechaDeSubida, Nullable<bool> estado, string observaciones, Nullable<int> codUsuario)
        {
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            var tipoInformeParameter = tipoInforme != null ?
                new ObjectParameter("TipoInforme", tipoInforme) :
                new ObjectParameter("TipoInforme", typeof(string));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var fechaDeSubidaParameter = fechaDeSubida.HasValue ?
                new ObjectParameter("FechaDeSubida", fechaDeSubida) :
                new ObjectParameter("FechaDeSubida", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarInforme_Result>("spAgregarInforme", codInformeParameter, tipoInformeParameter, archivoParameter, fechaDeSubidaParameter, estadoParameter, observacionesParameter, codUsuarioParameter);
        }
    
        public virtual ObjectResult<spAgregarInformeAvanceEPP_Result> spAgregarInformeAvanceEPP(Nullable<int> codInformeAvanceEPP, byte[] archivo, Nullable<int> codInforme)
        {
            var codInformeAvanceEPPParameter = codInformeAvanceEPP.HasValue ?
                new ObjectParameter("CodInformeAvanceEPP", codInformeAvanceEPP) :
                new ObjectParameter("CodInformeAvanceEPP", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarInformeAvanceEPP_Result>("spAgregarInformeAvanceEPP", codInformeAvanceEPPParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spAgregarInformeDeSupervisionEPP_Result> spAgregarInformeDeSupervisionEPP(Nullable<int> codInformeDeSupervisionEPP, string calificacion, string supervisorACargoEmpresa, byte[] archivo, Nullable<int> codInforme)
        {
            var codInformeDeSupervisionEPPParameter = codInformeDeSupervisionEPP.HasValue ?
                new ObjectParameter("CodInformeDeSupervisionEPP", codInformeDeSupervisionEPP) :
                new ObjectParameter("CodInformeDeSupervisionEPP", typeof(int));
    
            var calificacionParameter = calificacion != null ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(string));
    
            var supervisorACargoEmpresaParameter = supervisorACargoEmpresa != null ?
                new ObjectParameter("SupervisorACargoEmpresa", supervisorACargoEmpresa) :
                new ObjectParameter("SupervisorACargoEmpresa", typeof(string));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarInformeDeSupervisionEPP_Result>("spAgregarInformeDeSupervisionEPP", codInformeDeSupervisionEPPParameter, calificacionParameter, supervisorACargoEmpresaParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spAgregarInformeFinalEPP_Result> spAgregarInformeFinalEPP(Nullable<int> codInformeFinalEPP, byte[] archivo, Nullable<int> codInforme)
        {
            var codInformeFinalEPPParameter = codInformeFinalEPP.HasValue ?
                new ObjectParameter("CodInformeFinalEPP", codInformeFinalEPP) :
                new ObjectParameter("CodInformeFinalEPP", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarInformeFinalEPP_Result>("spAgregarInformeFinalEPP", codInformeFinalEPPParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spAgregarPlanDeTrabajoEPP_Result> spAgregarPlanDeTrabajoEPP(Nullable<int> codPlanDeTrabajoEPP, byte[] archivo, Nullable<int> codInforme)
        {
            var codPlanDeTrabajoEPPParameter = codPlanDeTrabajoEPP.HasValue ?
                new ObjectParameter("CodPlanDeTrabajoEPP", codPlanDeTrabajoEPP) :
                new ObjectParameter("CodPlanDeTrabajoEPP", typeof(int));
    
            var archivoParameter = archivo != null ?
                new ObjectParameter("Archivo", archivo) :
                new ObjectParameter("Archivo", typeof(byte[]));
    
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarPlanDeTrabajoEPP_Result>("spAgregarPlanDeTrabajoEPP", codPlanDeTrabajoEPPParameter, archivoParameter, codInformeParameter);
        }
    
        public virtual ObjectResult<spAgregarUsuario_Result> spAgregarUsuario(Nullable<int> codUsuario, string usuario, Nullable<int> clave)
        {
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave.HasValue ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAgregarUsuario_Result>("spAgregarUsuario", codUsuarioParameter, usuarioParameter, claveParameter);
        }
    
        public virtual ObjectResult<spEliminarCartaDePresentacion_Result> spEliminarCartaDePresentacion(Nullable<int> codCartaPresentacion)
        {
            var codCartaPresentacionParameter = codCartaPresentacion.HasValue ?
                new ObjectParameter("CodCartaPresentacion", codCartaPresentacion) :
                new ObjectParameter("CodCartaPresentacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarCartaDePresentacion_Result>("spEliminarCartaDePresentacion", codCartaPresentacionParameter);
        }
    
        public virtual ObjectResult<spEliminarCoordinadorEPP_Result> spEliminarCoordinadorEPP(Nullable<int> codCoordinador)
        {
            var codCoordinadorParameter = codCoordinador.HasValue ?
                new ObjectParameter("CodCoordinador", codCoordinador) :
                new ObjectParameter("CodCoordinador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarCoordinadorEPP_Result>("spEliminarCoordinadorEPP", codCoordinadorParameter);
        }
    
        public virtual ObjectResult<spEliminarDirectorEPIS_Result> spEliminarDirectorEPIS(Nullable<int> codDirectorEPIS)
        {
            var codDirectorEPISParameter = codDirectorEPIS.HasValue ?
                new ObjectParameter("CodDirectorEPIS", codDirectorEPIS) :
                new ObjectParameter("CodDirectorEPIS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarDirectorEPIS_Result>("spEliminarDirectorEPIS", codDirectorEPISParameter);
        }
    
        public virtual ObjectResult<spEliminarDocenteSupervisorEPP_Result> spEliminarDocenteSupervisorEPP(Nullable<int> codDocenteSupervisor)
        {
            var codDocenteSupervisorParameter = codDocenteSupervisor.HasValue ?
                new ObjectParameter("CodDocenteSupervisor", codDocenteSupervisor) :
                new ObjectParameter("CodDocenteSupervisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarDocenteSupervisorEPP_Result>("spEliminarDocenteSupervisorEPP", codDocenteSupervisorParameter);
        }
    
        public virtual ObjectResult<spEliminarEmpresa_Result> spEliminarEmpresa(Nullable<int> codEmpresa)
        {
            var codEmpresaParameter = codEmpresa.HasValue ?
                new ObjectParameter("CodEmpresa", codEmpresa) :
                new ObjectParameter("CodEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarEmpresa_Result>("spEliminarEmpresa", codEmpresaParameter);
        }
    
        public virtual ObjectResult<spEliminarEstudiante_Result> spEliminarEstudiante(Nullable<int> codEstudiante)
        {
            var codEstudianteParameter = codEstudiante.HasValue ?
                new ObjectParameter("CodEstudiante", codEstudiante) :
                new ObjectParameter("CodEstudiante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarEstudiante_Result>("spEliminarEstudiante", codEstudianteParameter);
        }
    
        public virtual ObjectResult<spEliminarInforme_Result> spEliminarInforme(Nullable<int> codInforme)
        {
            var codInformeParameter = codInforme.HasValue ?
                new ObjectParameter("CodInforme", codInforme) :
                new ObjectParameter("CodInforme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarInforme_Result>("spEliminarInforme", codInformeParameter);
        }
    
        public virtual ObjectResult<spEliminarInformeAvanceEPP_Result> spEliminarInformeAvanceEPP(Nullable<int> codInformeAvanceEPP)
        {
            var codInformeAvanceEPPParameter = codInformeAvanceEPP.HasValue ?
                new ObjectParameter("CodInformeAvanceEPP", codInformeAvanceEPP) :
                new ObjectParameter("CodInformeAvanceEPP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarInformeAvanceEPP_Result>("spEliminarInformeAvanceEPP", codInformeAvanceEPPParameter);
        }
    
        public virtual ObjectResult<spEliminarInformeDeSupervisionEPP_Result> spEliminarInformeDeSupervisionEPP(Nullable<int> codInformeDeSupervisionEPP)
        {
            var codInformeDeSupervisionEPPParameter = codInformeDeSupervisionEPP.HasValue ?
                new ObjectParameter("CodInformeDeSupervisionEPP", codInformeDeSupervisionEPP) :
                new ObjectParameter("CodInformeDeSupervisionEPP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarInformeDeSupervisionEPP_Result>("spEliminarInformeDeSupervisionEPP", codInformeDeSupervisionEPPParameter);
        }
    
        public virtual ObjectResult<spEliminarInformeFinalEPP_Result> spEliminarInformeFinalEPP(Nullable<int> codInformeFinalEPP)
        {
            var codInformeFinalEPPParameter = codInformeFinalEPP.HasValue ?
                new ObjectParameter("CodInformeFinalEPP", codInformeFinalEPP) :
                new ObjectParameter("CodInformeFinalEPP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarInformeFinalEPP_Result>("spEliminarInformeFinalEPP", codInformeFinalEPPParameter);
        }
    
        public virtual ObjectResult<spEliminarPlanDeTrabajoEPP_Result> spEliminarPlanDeTrabajoEPP(Nullable<int> codPlanDeTrabajoEPP)
        {
            var codPlanDeTrabajoEPPParameter = codPlanDeTrabajoEPP.HasValue ?
                new ObjectParameter("CodPlanDeTrabajoEPP", codPlanDeTrabajoEPP) :
                new ObjectParameter("CodPlanDeTrabajoEPP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarPlanDeTrabajoEPP_Result>("spEliminarPlanDeTrabajoEPP", codPlanDeTrabajoEPPParameter);
        }
    
        public virtual ObjectResult<spEliminarUsuario_Result> spEliminarUsuario(Nullable<int> codUsuario)
        {
            var codUsuarioParameter = codUsuario.HasValue ?
                new ObjectParameter("CodUsuario", codUsuario) :
                new ObjectParameter("CodUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEliminarUsuario_Result>("spEliminarUsuario", codUsuarioParameter);
        }
    
        public virtual ObjectResult<spListarCartasDePresentacion_Result> spListarCartasDePresentacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarCartasDePresentacion_Result>("spListarCartasDePresentacion");
        }
    
        public virtual ObjectResult<spListarCoordinadoresPPP_Result> spListarCoordinadoresPPP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarCoordinadoresPPP_Result>("spListarCoordinadoresPPP");
        }
    
        public virtual ObjectResult<spListarDirectoresEPIS_Result> spListarDirectoresEPIS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarDirectoresEPIS_Result>("spListarDirectoresEPIS");
        }
    
        public virtual ObjectResult<spListarDocentesSupervisoresEPP_Result> spListarDocentesSupervisoresEPP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarDocentesSupervisoresEPP_Result>("spListarDocentesSupervisoresEPP");
        }
    
        public virtual ObjectResult<spListarEmpresas_Result> spListarEmpresas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarEmpresas_Result>("spListarEmpresas");
        }
    
        public virtual ObjectResult<spListarEstudiantes_Result> spListarEstudiantes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarEstudiantes_Result>("spListarEstudiantes");
        }
    
        public virtual ObjectResult<spListarInformes_Result> spListarInformes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarInformes_Result>("spListarInformes");
        }
    
        public virtual ObjectResult<spListarInformesAvanceEPP_Result> spListarInformesAvanceEPP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarInformesAvanceEPP_Result>("spListarInformesAvanceEPP");
        }
    
        public virtual ObjectResult<spListarInformesDeSupervision_Result> spListarInformesDeSupervision()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarInformesDeSupervision_Result>("spListarInformesDeSupervision");
        }
    
        public virtual ObjectResult<spListarInformesFinalesEPP_Result> spListarInformesFinalesEPP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarInformesFinalesEPP_Result>("spListarInformesFinalesEPP");
        }
    
        public virtual ObjectResult<spListarPlanesDeTrabajo_Result> spListarPlanesDeTrabajo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarPlanesDeTrabajo_Result>("spListarPlanesDeTrabajo");
        }
    
        public virtual ObjectResult<spListarUsuarios_Result> spListarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarUsuarios_Result>("spListarUsuarios");
        }
    
        public virtual ObjectResult<Nullable<int>> spValidarUsuario(string usuario, string clave)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spValidarUsuario", usuarioParameter, claveParameter);
        }
    
        public virtual ObjectResult<uspBuscarCartaDePresentacion_Result> uspBuscarCartaDePresentacion(string texto)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarCartaDePresentacion_Result>("uspBuscarCartaDePresentacion", textoParameter);
        }
    
        public virtual ObjectResult<uspBuscarCoordinadorEPP_Result> uspBuscarCoordinadorEPP(string texto, string criterio)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var criterioParameter = criterio != null ?
                new ObjectParameter("criterio", criterio) :
                new ObjectParameter("criterio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarCoordinadorEPP_Result>("uspBuscarCoordinadorEPP", textoParameter, criterioParameter);
        }
    
        public virtual ObjectResult<uspBuscarDirectorEPIS_Result> uspBuscarDirectorEPIS(string texto, string criterio)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var criterioParameter = criterio != null ?
                new ObjectParameter("criterio", criterio) :
                new ObjectParameter("criterio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarDirectorEPIS_Result>("uspBuscarDirectorEPIS", textoParameter, criterioParameter);
        }
    
        public virtual ObjectResult<uspBuscarDocenteSupervisorEPP_Result> uspBuscarDocenteSupervisorEPP(string texto, string criterio)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var criterioParameter = criterio != null ?
                new ObjectParameter("criterio", criterio) :
                new ObjectParameter("criterio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarDocenteSupervisorEPP_Result>("uspBuscarDocenteSupervisorEPP", textoParameter, criterioParameter);
        }
    
        public virtual ObjectResult<uspBuscarEmpresa_Result> uspBuscarEmpresa(string texto, string criterio)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var criterioParameter = criterio != null ?
                new ObjectParameter("criterio", criterio) :
                new ObjectParameter("criterio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarEmpresa_Result>("uspBuscarEmpresa", textoParameter, criterioParameter);
        }
    
        public virtual ObjectResult<uspBuscarEstudiante_Result> uspBuscarEstudiante(string texto, string criterio)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var criterioParameter = criterio != null ?
                new ObjectParameter("criterio", criterio) :
                new ObjectParameter("criterio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarEstudiante_Result>("uspBuscarEstudiante", textoParameter, criterioParameter);
        }
    
        public virtual ObjectResult<uspBuscarInforme_Result> uspBuscarInforme(string texto)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarInforme_Result>("uspBuscarInforme", textoParameter);
        }
    
        public virtual ObjectResult<uspBuscarInformeAvanceEPP_Result> uspBuscarInformeAvanceEPP(string texto)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarInformeAvanceEPP_Result>("uspBuscarInformeAvanceEPP", textoParameter);
        }
    
        public virtual ObjectResult<uspBuscarInformeDeSupervisionEPP_Result> uspBuscarInformeDeSupervisionEPP(string texto, string criterio)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var criterioParameter = criterio != null ?
                new ObjectParameter("criterio", criterio) :
                new ObjectParameter("criterio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarInformeDeSupervisionEPP_Result>("uspBuscarInformeDeSupervisionEPP", textoParameter, criterioParameter);
        }
    
        public virtual ObjectResult<uspBuscarInformeFinalEPP_Result> uspBuscarInformeFinalEPP(string texto)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarInformeFinalEPP_Result>("uspBuscarInformeFinalEPP", textoParameter);
        }
    
        public virtual ObjectResult<uspBuscarPlanDeTrabajoEPP_Result> uspBuscarPlanDeTrabajoEPP(string texto)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarPlanDeTrabajoEPP_Result>("uspBuscarPlanDeTrabajoEPP", textoParameter);
        }
    
        public virtual ObjectResult<uspBuscarUsuario_Result> uspBuscarUsuario(string texto, string criterio)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var criterioParameter = criterio != null ?
                new ObjectParameter("criterio", criterio) :
                new ObjectParameter("criterio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspBuscarUsuario_Result>("uspBuscarUsuario", textoParameter, criterioParameter);
        }
    }
}
